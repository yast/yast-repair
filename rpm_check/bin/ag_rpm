#!/bin/bash
# need files: awk,sed
PREFIX=/usr/local/yast2/modules/y2m_os_repair/rpm_check
PREFIX=/usr/lib/YaST2
export PREFIX  # $PREFIX is used by $RPM_STAT as environment variable
export LANG=C 

RPM_STAT=$PREFIX/bin/rpm_stat.awk
GET_PACKAGENAMES=$PREFIX/bin/get_packagenames.awk
READ_DB=$PREFIX/bin/rpm_dDB2list.awk

MIN_INSTALL_LIST=/var/adm/current_package_descr/suse/setup/descr/Minimal+X11.sel # typical location
COMMON_LIST=/var/adm/current_package_descr/suse/setup/descr/common.pkd # typical location

# SCR-paths
SCRPATH1="Read (.rpm_stat, "		# read stat of an _installed_ rpm-package: the failure status of a rpm (dependencies; missed, fail files)
SCRPATH2="Write (.create_rpm_dDB, " # creates a new rpm_dDB from a set of packagenames with [<path>/]filename specified by the argument 
									# the package set will be filtered from files $MIN_INSTALL_LIST(minimal SuSE-install) and $COMMON_LIST(packages for this platform)
SCRPATH3="Read (.get_rpm_dDB, "		# reads the by argument specified rpm_dDB and returns a YCP-list with rpm-difference-maps
SCRPATH4="Write (.add_rpm_dDB, "	# add from rpm-name generated rpm_stat-entry to an existing rpm_dDB

while true ; do
    read COMMAND || exit
    
    case "$COMMAND" in
	"result ("*)
		unset PREFIX
	    exit
	    ;;
		
	# one argument: the rpm-name (short or long)
	# if short name passed -> rpm-version not available
	$SCRPATH1*)
		RPM_NAME=`echo "$COMMAND" | sed -n 's/'"$SCRPATH1"'"\(.*\)")/\1/p'`
		if test "x$RPM_NAME" != "x"; then
			echo "$RPM_NAME" | awk -f "$RPM_STAT"
		else
			echo "nil"
		fi
	;;
	
	# creates a rpm_dDB (rpm diff Data Base, first argument) from a 
	# rpm_min_install_list-file(Minimal+X11.sel contains sets for minimal instalation) and 
	# common_list-file (common.pkd contains platform specific packagenames)
	$SCRPATH2*)
		DB_NAME=`echo "$COMMAND" | sed -n 's/'"$SCRPATH2"'"\(.*\)")/\1/p'`
		if test \( "x$DB_NAME" = "x" \) -o \( "x$MIN_INSTALL_LIST" = "x" \) -o \( "x$COMMON_LIST" = "x" \) -o \( ! -r "$MIN_INSTALL_LIST" \) -o \( ! -s "$MIN_INSTALL_LIST" \) -o \( ! -r "$COMMON_LIST" \) -o \( ! -s "$COMMON_LIST" \); then
			echo "false"
		else
			awk -v min_file_name="$MIN_INSTALL_LIST" -f "$GET_PACKAGENAMES" < "$COMMON_LIST" | awk -f "$RPM_STAT" | sed -n '/"DAMAGED" *: *true/p' > "$DB_NAME"
			if test $? -eq 0; then 
				echo "true"
			else
				echo "false"
			fi
		fi
	;;
	
	# returns a rpm_dDB as a list, if the rpm_dDB-file exists and is consistent
	# otherwise returns "nil"
	$SCRPATH3*)
		DB_NAME=`echo "$COMMAND" | sed -n 's/'"$SCRPATH3"'"\(.*\)")/\1/p'`
		if  test \( "x$DB_NAME" = "x" \) -o \( ! -r "$DB_NAME" \) -o \( ! -s "$DB_NAME" \); then 
			echo "nil"
		else
			awk -f "$READ_DB" < "$DB_NAME" 
		fi
	;;

	# adds a new rpm_stat-map to the rpm_dDB database.
	# 1.arg is the DB_NAME, 2.arg is the rpm-name
	# !!!ATTENTION!!! it adds a new entry without to check if this entry already exists!
	$SCRPATH4*)
		DB_NAME=`echo "$COMMAND" | sed -n 's/'"$SCRPATH4"'"\(.*\)" *, *"\(.*\)" *)/\1/p'`
		RPM_NAME=`echo "$COMMAND" | sed -n 's/'"$SCRPATH4"'"\(.*\)" *, *"\(.*\)" *)/\2/p'`
		if test "x$DB_NAME" != "x"; then 
			touch "$DB_NAME"
			if ! test -w "$DB_NAME"; then
				echo "false"
			else
				echo "$RPM_NAME" | awk -f "$RPM_STAT" | sed -n '/"DAMAGED" *: *true/p' >> "$DB_NAME"
				echo "true"
			fi
		else
			echo "false"
		fi
	;;
	
	*)
	    echo "nil"
    esac
done
