/**
 * File:
 *   os_repair.ycp
 *
 * Module:
 *   YaST2 OS Repair. Automatic error detection & repair tool for Linux.
 *
 * Summary:
 *   YaST2 OS Repair. Automatic error detection & repair tool for Linux.
 *
 * Author:
 *   Michael Koehrmann <curry@suse.de>
 *
 * $Id$
 *
 * Dialog for Step 1
 *
 */

{
  textdomain "repair";

  // Testmode, for example fo screenshots
  boolean test_mode    = lookup ( user_settings, "test_mode", false );

  // Read the current architecture (no architecture depended modes yet
  // string architecture = lookup( user_settings, "architecture", default_architecture);

  term contents = 
      `VBox(
	    `VWeight(30, `VStretch() ),
	    `VWeight(50, `RadioButtonGroup( `id( `os_repair_mode ),
					    `HSquash(
						     `Frame (
							     // message above radiobuttons
							     _("Please select"),
							     `HBox(
								   `HSpacing(1),
								   `VBox(
									 `VSpacing(0.3),
									 `Left(`RadioButton(`id(`normal_mode),
											    // label for radiobutton 1
											    _("&Normal mode"), true ) ),
									 `VSpacing(0.2),
									 `Left(`RadioButton(`id(`expert_mode),
											    // label for radiobutton 2
											    _("&Expert mode"), false )),
									 `VSpacing(0.2),
									 `Left(`RadioButton(`id(`update_mode),
											    // label for radiobutton 3
											    _("&Update YaST2 OS Repair"), false ) ),
									 `VSpacing(0.3)
									 ),
								   `HSpacing(1)
								   )
							     )
						     )
					    )
		     ),
	    `VWeight(35, `VStretch() )
	    );
			

  string title = UI( _("YaST2 OS Repair") );
    
  string help_text = "";

  // Text for help widget
  help_text =  UI( _("\
<p>YaST2 OS Repair is an automatic error detection & repair tool for SuSE Linux.
</p>") );

  help_text = help_text + UI( _("\
<p>Press <b>Next</b> to execute the error detection on LILO.
</p>") );

  help_text = help_text + UI( _("\
<p>Select the expert mode for an individual error detection and repair on your SuSE Linux system.
</p>") );
  
  // using SetContents (define in newmodule.ycp)
  UI(`SetContents(title, contents, help_text, true, false, false, true));

  // change Label to Finish for the last step
  UI(`ChangeWidget(`id(`next), `Label,  _("&Next") ) );

  // Disable expert and update mode which have to be implemented
  UI(`ChangeWidget(`id(`update_mode), `Enabled, false));
  UI(`ChangeWidget(`id(`expert_mode), `Enabled, false));
  
  symbol ret = `next;

  repeat
      {
	  if ( auto_mode )
	      ret = `next;
	  else
	      ret = UI(`UserInput());
	  
	  if (ret == `next)
	  {
              // bla
	  }
	  else if ( ret == `back)
	  {
	      UI(`ChangeWidget(`id(`next), `Label,  _("&Next") ) );
	  }

      } until (ret == `next || ret == `back || ret == `cancel);
    
  return ret;
}
